---
version: '3.5'

services:
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    restart: unless-stopped
    env_file:
      - "./configuration/keycloak.env"
    volumes:
      - /etc/hosts:/etc/hosts:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    ports:
      - 8080:8080
    depends_on:
      - postgres
    command: ["-b", "0.0.0.0", "-Dkeycloak.profile.feature.docker=enabled"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.entrypoints=http"
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.okeanos.xyz`)"
      - "traefik.http.middlewares.keycloak-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.keycloak.middlewares=keycloak-https-redirect"
      - "traefik.http.routers.keycloak-secure.entrypoints=https"
      - "traefik.http.routers.keycloak-secure.rule=Host(`keycloak.okeanos.xyz`)"
      - "traefik.http.routers.keycloak-secure.tls=true"
      - "traefik.http.routers.keycloak-secure.tls.certresolver=http"

  postgres:
    container_name: postgres
    image: library/postgres:12-alpine
    restart: unless-stopped
    env_file:
      - ./configuration/postgres.env
    volumes:
      - postgres:/var/lib/postgresql/data
    secrets:
      - POSTGRES_PASSWORD
    healthcheck:
      test: pg_isready -U keycloak

  traefik:
    container_name: traefik
    image: traefik:2.3
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./configuration/traefik.yml:/etc/traefik/traefik.yml:ro
      - acme:/etc/traefik/acme
    labels:
      - "traefik.enable=true"

volumes:
  acme:
  postgres:

secrets:
  POSTGRES_PASSWORD:
    file: ./secrets/POSTGRES_PASSWORD
